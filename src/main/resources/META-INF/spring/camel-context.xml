<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. 

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!-- Configures the Camel Context-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://camel.apache.org/schema/spring
						http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="com.beans.AcceptorBean" id="acceptorBean"/>
    <bean class="com.beans.ValidatorBean" id="validatorBean"/>
    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">
        
        <dataFormats>
            <jaxb contextPath="com.dataformatxml" id="orderFormater"/>
            <json id="jackson" prettyPrint="true" library="Jackson" unmarshalTypeName="com.datafromatjson.OrderRoot" />
            <xmljson id="xmljson" forceTopLevelObject="true" elementName="" arrayName="" rootName=""/>
        </dataFormats>
        
        <route id="xmlformater">
            <from id="fromxml" uri="file:files/incoming?include=order.*xml&amp;noop=true"/>
            <unmarshal id="unmarshalxml" ref="orderFormater"/>
            <bean id="beancall" method="accept" ref="acceptorBean"/>
            <marshal id="marshalxml" ref="orderFormater"/>
            <to id="detinationxml" uri="file:files/outgoing?fileExist=Append"/>
        </route>
        
        <route id="jsonformater">
            <from id="fromjson" uri="file:files/incoming?include=order.*json&amp;noop=true"/>
            <unmarshal id="unmarshaljson" ref="jackson"/>
            <bean id="validatorBeanCall" method="validate" ref="validatorBean"/>
            <marshal id="marshaljson" ref="jackson"/>
            <to id="destinationjson" uri="file:files/outgoing?fileExist=Append"/>
        </route>
        
       	<route id="jsonxmlformater">
            <from id="fromjsonxml" uri="file:files/incoming?noop=true"/>
            <choice>
            	<when>
            		<simple>${file:ext} == 'json'</simple>
            		<setHeader headerName="orderid">
            			<jsonpath>$.order.id</jsonpath>
            		</setHeader>
            		<unmarshal id="unmarshaljsonxml" ref="xmljson"/>
		            <toD id="destinationjsonxml" uri="file:files/outgoing/jsonxml?fileExist=Append&amp;fileName=order_${headers.orderid}.xml"/>
            	</when>
            	<when>
            		<simple>${file:ext} == 'xml'</simple>
            		<setHeader headerName="orderid">
            			<xpath>/order/id/text()</xpath>
            		</setHeader>
            		<marshal id="unmarshalxmljson" ref="xmljson"/>
		            <toD id="destinationxmljson" uri="file:files/outgoing/jsonxml?fileExist=Append&amp;fileName=order_${headers.orderid}.json"/>
            	</when>
            	<otherwise>
            		<log message="Archivo no aceptado: ${headers.CamelFileName}" />
            	</otherwise>
            </choice>
        </route>
    </camelContext>
</beans>
